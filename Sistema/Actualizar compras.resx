<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SXk8/H8mMljCA+cSuQAAAABJRU5ErkJggg==
</value>
  </data>
</root>